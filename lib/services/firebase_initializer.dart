// lib/services/firebase_initializer.dart
import 'package:firebase_core/firebase_core.dart';
import '../firebase_options.dart';

/// ‡∏ï‡∏±‡∏ß‡∏ö‡∏π‡∏ï Firebase ‡∏ó‡∏µ‡πà‡∏Å‡∏±‡∏ô duplicate-init ‡∏ó‡∏±‡πâ‡∏á‡∏à‡∏≤‡∏Å race condition ‡πÅ‡∏•‡∏∞ hot-restart
class FirebaseBoot {
  static Future<FirebaseApp>? _initializing;

  static Future<FirebaseApp> ensure() async {
    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ instance ‡πÅ‡∏•‡πâ‡∏ß ‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏•‡∏¢
    if (Firebase.apps.isNotEmpty) {
      return Firebase.app();
    }
    // ‡∏ñ‡πâ‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á init ‡∏≠‡∏¢‡∏π‡πà ‡πÉ‡∏´‡πâ‡∏£‡∏≠ Future ‡πÄ‡∏î‡∏¥‡∏°
    if (_initializing != null) {
      return await _initializing!;
    }

    // ‡∏•‡πá‡∏≠‡∏Å‡∏î‡πâ‡∏ß‡∏¢ Future ‡∏ï‡∏±‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏±‡∏ô‡∏ã‡πâ‡∏≠‡∏ô
    _initializing = _initSafe();
    try {
      return await _initializing!;
    } finally {
      _initializing = null; // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏•‡πá‡∏≠‡∏Å
    }
  }

  static Future<FirebaseApp> _initSafe() async {
    if (Firebase.apps.isNotEmpty) {
      return Firebase.app();
    }
    try {
      // üëá ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠ line ‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏´‡∏≤‡πÄ‡∏à‡∏≠ (‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î 36)
      return await Firebase.initializeApp(
        options: DefaultFirebaseOptions.currentPlatform,
      );
    } on FirebaseException catch (e) {
      // ‡πÅ‡∏Ç‡πà‡∏á‡∏Å‡∏±‡∏ô‡∏à‡∏ô‡∏ã‡πâ‡∏≥ => ‡∏´‡∏¢‡∏¥‡∏ö‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å init ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß
      if (e.code == 'duplicate-app' || e.message?.contains('duplicate-app') == true) {
        return Firebase.app();
      }
      rethrow;
    } catch (_) {
      // ‡∏Å‡∏±‡∏ô‡πÄ‡∏Ñ‡∏™ message ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà FirebaseException ‡πÅ‡∏ï‡πà‡∏°‡∏µ app ‡πÅ‡∏•‡πâ‡∏ß
      if (Firebase.apps.isNotEmpty) {
        return Firebase.app();
      }
      rethrow;
    }
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏±‡πâ‡∏ô ‡πÜ ‡πÉ‡∏´‡πâ main.dart ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏î‡πâ
Future<FirebaseApp> ensureFirebaseInitialized() => FirebaseBoot.ensure();
